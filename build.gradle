plugins {
    id 'java'
    id 'war'
}

group 'org.bank'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
}

sourceCompatibility = "16"
targetCompatibility = "16"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // 로깅
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'

    //데이터베이스
    implementation 'com.zaxxer:HikariCP:2.7.4'
    implementation 'com.mysql:mysql-connector-j:8.1.0'

    //MyBatis
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'

    // 스프링
    implementation("org.springframework:spring-context:${springVersion}")
            { exclude group: 'commons-logging', module: 'commons-logging' }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'

    // Swagger 관련 의존성
    implementation 'io.swagger:swagger-annotations:1.6.2'

    // Servlet API
    implementation('javax.servlet:javax.servlet-api:4.0.1')

    // xml내 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Jackson - Json 처리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    // 테스트
    testImplementation "org.springframework:spring-test:${springVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
    systemProperty 'file.encoding', 'UTF-8'
}
